NullCheckEliminationTest
---
NullCheckElimination
---
ArgumentsAreUnchecked
---
def test(x):
  return x
---
fun jittestmodule:test {
  bb 0 {
    v1:Object = LoadArg<0; "x">
    Return v1
  }
}
---
VariablesAreUncheckedWhenAssigned
---
def test():
  x = 1
  return x
---
fun jittestmodule:test {
  bb 0 {
    v2:Nullptr = LoadConst<Nullptr>
    v3:LongExact[1] = LoadConst<LongExact[1]>
    Return v3
  }
}
---
VariablesAreCheckedIfConditionallyAssigned
---
def test(x):
  if x:
    y = 1
  return y
---
fun jittestmodule:test {
  bb 0 {
    v5:Nullptr = LoadConst<Nullptr>
    v4:Object = LoadArg<0; "x">
    v7:CInt32 = IsTruthy v4 {
      NextInstrOffset 4
      Locals<2> v4 v5
    }
    CondBranch<1, 2> v7
  }

  bb 1 (preds 0) {
    v8:LongExact[1] = LoadConst<LongExact[1]>
    Branch<2>
  }

  bb 2 (preds 0, 1) {
    v11:OptLongExact = Phi<0, 1> v5 v8
    v12:LongExact = CheckVar<1; "y"> v11 {
      NextInstrOffset 10
      Locals<2> v4 v11
    }
    Return v12
  }
}
---
VariablesAreUncheckedIfAssignedOnAllFlows
---
def test(x):
  if x:
    y = 1
  else:
    y = 2
  return y
---
fun jittestmodule:test {
  bb 0 {
    v6:Nullptr = LoadConst<Nullptr>
    v5:Object = LoadArg<0; "x">
    v8:CInt32 = IsTruthy v5 {
      NextInstrOffset 4
      Locals<2> v5 v6
    }
    CondBranch<1, 2> v8
  }

  bb 1 (preds 0) {
    v9:LongExact[1] = LoadConst<LongExact[1]>
    Branch<3>
  }

  bb 2 (preds 0) {
    v11:LongExact[2] = LoadConst<LongExact[2]>
    Branch<3>
  }

  bb 3 (preds 1, 2) {
    v14:LongExact = Phi<1, 2> v9 v11
    Return v14
  }
}
---
VariablesAreUncheckedOnSubgraphsWhereAssigned
---
def test(x):
  if x:
    y = 1
    if y:
      return 100
  return y
---
fun jittestmodule:test {
  bb 0 {
    v7:Nullptr = LoadConst<Nullptr>
    v6:Object = LoadArg<0; "x">
    v9:CInt32 = IsTruthy v6 {
      NextInstrOffset 4
      Locals<2> v6 v7
    }
    CondBranch<1, 3> v9
  }

  bb 1 (preds 0) {
    v10:LongExact[1] = LoadConst<LongExact[1]>
    v13:CInt32 = IsTruthy v10 {
      NextInstrOffset 12
      Locals<2> v6 v10
    }
    CondBranch<2, 3> v13
  }

  bb 2 (preds 1) {
    v14:LongExact[100] = LoadConst<LongExact[100]>
    Return v14
  }

  bb 3 (preds 0, 1) {
    v16:OptLongExact = Phi<0, 1> v7 v10
    v17:LongExact = CheckVar<1; "y"> v16 {
      NextInstrOffset 18
      Locals<2> v6 v16
    }
    Return v17
  }
}
---
