ProfileDataStaticTest
---
Simplify
---
StoreFieldWithPrimitive
---
from __static__ import cbool
class A:
  def __init__(self):
    self._field : cbool = True

def test(self : A):
  self._field : cbool = True

test(A())
---
fun jittestmodule:test {
  bb 0 {
    v5:User[A] = LoadArg<0; "self", User[A]>
    v6:CBool[true] = LoadConst<CBool[true]>
    v8:Nullptr = LoadConst<Nullptr>
    UseType<CBool> v6
    StoreField<_field@16> v5 v6 v8
    v10:NoneType = LoadConst<NoneType>
    Return v10
  }
}
---
EndFinallyDoesntCrash
---
def test(a):
  try:
    return a
  finally:
    a += 1

test(1)
---
fun jittestmodule:test {
  bb 0 {
    v6:Object = LoadArg<0; "a">
    v8:CInt32 = LoadEvalBreaker
    CondBranch<5, 4> v8
  }

  bb 5 (preds 0) {
    v9:Bool = RunPeriodicTasks {
      FrameState {
        NextInstrOffset 8
        Locals<1> v6
        Stack<1> v6
        BlockStack {
          Opcode 122 HandlerOff 12 StackLevel 0
        }
      }
    }
    Branch<4>
  }

  bb 4 (preds 0, 5) {
    v11:CInt64[10] = LoadConst<CInt64[10]>
    v15:MortalLongExact[1] = LoadConst<MortalLongExact[1]>
    v16:LongExact = GuardType<LongExact> v6 {
      GuiltyReg v6
    }
    v18:Object = InPlaceOp<Add> v16 v15 {
      FrameState {
        NextInstrOffset 18
        Locals<1> v16
        Stack<2> v6 v11
      }
    }
    Return v6
  }
}
---
