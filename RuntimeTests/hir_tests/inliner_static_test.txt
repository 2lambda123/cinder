InlinerStaticTest
---
InlineFunctionCalls
Simplify
---
InvokeStaticFunctionWithNoArgs
---
def foo():
    # Chosen by fair dice roll. Guaranteed to be random.
    return 4

def test():
    return foo()
---
fun jittestmodule:test {
  bb 0 {
    BeginInlinedFunction<jittestmodule:foo> {
      NextInstrOffset 6
    }
    v5:MortalLongExact[4] = LoadConst<MortalLongExact[4]>
    EndInlinedFunction
    Return v5
  }
}
---
InvokeStaticFunctionWithArgs
---
def foo(x: int, y: int) -> int:
    # Chosen by fair dice roll. Guaranteed to be random.
    return x + y

def test():
    return foo(1, 2)
---
fun jittestmodule:test {
  bb 0 {
    v4:MortalLongExact[1] = LoadConst<MortalLongExact[1]>
    v5:MortalLongExact[2] = LoadConst<MortalLongExact[2]>
    BeginInlinedFunction<jittestmodule:foo> {
      NextInstrOffset 10
    }
    UseType<LongExact> v4
    UseType<LongExact> v5
    UseType<MortalLongExact[1]> v4
    UseType<MortalLongExact[2]> v5
    v20:MortalLongExact[3] = LoadConst<MortalLongExact[3]>
    EndInlinedFunction
    Return v20
  }
}
---
InvokeStaticFunctionReturningCType
---
from __static__ import int8

def foo() -> int8:
    # Chosen by fair dice roll. Guaranteed to be random.
    return 4

def test() -> int8:
    return foo()
---
fun jittestmodule:test {
  bb 0 {
    BeginInlinedFunction<jittestmodule:foo> {
      NextInstrOffset 6
    }
    v5:CInt8[4] = LoadConst<CInt8[4]>
    EndInlinedFunction
    Return<CInt8> v5
  }
}
---
CalleeWithNonPrimitiveReturnHasObjectReturnType
---
def foo(x) -> bool:
    # isinstance is typed by SP as returning bool but returns object in the
    # JIT.
    return isinstance(x, bool)

def test(x):
    return foo(x)
---
fun jittestmodule:test {
  bb 0 {
    v3:Object = LoadArg<0; "x">
    BeginInlinedFunction<jittestmodule:foo> {
      NextInstrOffset 8
      Locals<1> v3
    }
    v12:OptObject = LoadGlobalCached<0; "isinstance">
    v13:MortalObjectUser[builtin_function_or_method:isinstance:0xdeadbeef] = GuardIs<0xdeadbeef> v12 {
      Descr 'LOAD_GLOBAL: isinstance'
    }
    v15:OptObject = LoadGlobalCached<1; "bool">
    v16:MortalTypeExact[bool:obj] = GuardIs<0xdeadbeef> v15 {
      Descr 'LOAD_GLOBAL: bool'
    }
    v17:Object = VectorCall<2> v13 v3 v16 {
      FrameState {
        NextInstrOffset 10
        Locals<1> v3
      }
    }
    EndInlinedFunction
    Return v17
  }
}
---
